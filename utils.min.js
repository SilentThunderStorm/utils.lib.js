var utils={timer:function(e,a,d){if(this instanceof timer){if("number"!=typeof e&&"undefined"===typeof a.onfinish)throw"Timer requires, at minimum, a duration and an 'onfinish' callback.";var m=this;this.duration=e;this.time=this.progress=0;this.status="ready";var f=a.onstart||null,g=a.onprogress||null,h=a.onpause||null,k=a.onabort||null,l=a.onreset||null,n=a.onfinish||a;"undefined"==typeof d&&(d="");this.continuous=d.continuous||!1;this.ease=d.ease||null;var c=0,b=0;this.start=function(){var a="paused"==
this.status?"Restarting":"Starting";this.status="running";c=(new Date).getTime();this.run();f&&f(a);return this};this.pause=function(){var a=(new Date).getTime();b+=a-c;c=a;this.status="paused";h&&h(b);return b};this.abort=function(){b=c=this.time=this.progress=0;this.status="aborted";k&&k();return!1};this.reset=function(){b=c=this.time=this.progress=0;this.status="ready";l&&l();return!0};this.run=function(){if("running"!=this.status)return!1;this.time=(new Date).getTime()-c+b;var a=this.time/this.duration;
this.progress=1<a?1:a;g&&g(this.progress);this.ease&&(void 0)(1<this.progress?1:this.progress);if(1<this.progress)return n(),this.reset(),this.continuous&&"aborted"!=this.status&&this.start(),!0;requestAnimationFrame(function(){m.run()})}}else return new timer(e,a,d)}};